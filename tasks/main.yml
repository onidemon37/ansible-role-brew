---
# tasks file for ansible-role-brew
- name: Ensure Homebrew dependencies are installed (Debian/Ubuntu)
  ansible.builtin.package:
    name:
      - build-essential
      - curl
      - file
      - git
    state: present
  when: ansible_facts['os_family'] == "Debian"
  become: true

- name: Ensure Homebrew dependencies are installed (Arch Linux)
  ansible.builtin.pacman:
    name:
      - base-devel
      - curl
      - git
    state: present
  when: ansible_facts['os_family'] == "Archlinux"

- name: Check if Homebrew is installed
  ansible.builtin.stat:
    path: "{{ homebrew_path }}/bin/brew"
  register: brew_binary

- name: Install Homebrew on Linux
  ansible.builtin.shell: |
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
  environment:
    NONINTERACTIVE: true
  when: not brew_binary.stat.exists

- name: Detect user's current shell
  ansible.builtin.shell: "getent passwd {{ ansible_user_id }} | cut -d: -f7"
  register: user_shell
  changed_when: false

- name: Determine the appropriate shell configuration file
  set_fact:
    shell_config_file: >-
      {% if user_shell.stdout.endswith('/zsh') %}
        ~/.zshrc
      {% elif user_shell.stdout.endswith('/bash') %}
        ~/.bashrc
      {% else %}
        ~/.profile
      {% endif %}

#- name: Add Homebrew to PATH
#  ansible.builtin.lineinfile:
#    path: "{{ shell_config_file }}"
#    line: 'eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"'
#    state: present
- name: Add Homebrew to PATH
  ansible.builtin.lineinfile:
    path: "{{ shell_config_file }}"
    line: >-
      {% if user_shell.stdout.endswith('/fish') %}
        eval (/home/linuxbrew/.linuxbrew/bin/brew shellenv)
      {% else %}
        eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
      {% endif %}
    state: present
    create: true
- name: Add task to install packages
  ansible.builtin.include_tasks: install-packages.yaml
